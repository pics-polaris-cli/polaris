{
  "version": 1,
  "projects": {
    "common-mappings": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/common-mappings",
      "sourceRoot": "libs/common-mappings/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/common-mappings/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/common-mappings/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/libs/common-mappings"
          ]
        },
        "build": {
          "builder": "@nrwl/js:tsc",
          "options": {
            "outputPath": "dist/libs/common-mappings",
            "tsConfig": "libs/common-mappings/tsconfig.lib.json",
            "packageJson": "libs/common-mappings/package.json",
            "main": "libs/common-mappings/src/index.ts",
            "assets": [
              "libs/common-mappings/*.md"
            ]
          },
          "outputs": [
            "{options.outputPath}"
          ]
        }
      },
      "tags": [
        "scope:core"
      ]
    },
    "core": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/core",
      "sourceRoot": "libs/core/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/core/**/*.ts",
              "libs/core/**/*.spec.ts",
              "libs/core/**/*.spec.tsx",
              "libs/core/**/*.spec.js",
              "libs/core/**/*.spec.jsx",
              "libs/core/**/*.d.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/core/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/libs/core"
          ]
        },
        "build": {
          "builder": "@nrwl/js:tsc",
          "options": {
            "outputPath": "dist/libs/core",
            "tsConfig": "libs/core/tsconfig.lib.json",
            "packageJson": "libs/core/package.json",
            "main": "libs/core/src/index.ts",
            "assets": [
              "libs/core/*.md"
            ]
          },
          "outputs": [
            "{options.outputPath}"
          ]
        }
      },
      "tags": [
        "scope:core"
      ]
    },
    "cost-efficiency": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/cost-efficiency",
      "sourceRoot": "libs/cost-efficiency/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/cost-efficiency/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/cost-efficiency"
          ],
          "options": {
            "jestConfig": "libs/cost-efficiency/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@nrwl/js:tsc",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/libs/cost-efficiency",
            "tsConfig": "libs/cost-efficiency/tsconfig.lib.json",
            "packageJson": "libs/cost-efficiency/package.json",
            "main": "libs/cost-efficiency/src/index.ts",
            "assets": [
              "libs/cost-efficiency/*.md"
            ]
          }
        }
      },
      "tags": [
        "scope:core",
        "scope:metric"
      ]
    },
    "elasticity-horizontal-elasticity-strategy-controller": {
      "$schema": "../../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/elasticity/horizontal-elasticity-strategy-controller",
      "sourceRoot": "apps/elasticity/horizontal-elasticity-strategy-controller/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/webpack:webpack",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/apps/elasticity/horizontal-elasticity-strategy-controller",
            "main": "apps/elasticity/horizontal-elasticity-strategy-controller/src/main.ts",
            "tsConfig": "apps/elasticity/horizontal-elasticity-strategy-controller/tsconfig.app.json",
            "externalDependencies": "none",
            "assets": [
              "apps/elasticity/horizontal-elasticity-strategy-controller/src/assets"
            ],
            "target": "node",
            "compiler": "tsc"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/elasticity/horizontal-elasticity-strategy-controller/src/environments/environment.ts",
                  "with": "apps/elasticity/horizontal-elasticity-strategy-controller/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "elasticity-horizontal-elasticity-strategy-controller:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/elasticity/horizontal-elasticity-strategy-controller/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/apps/elasticity/horizontal-elasticity-strategy-controller"
          ],
          "options": {
            "jestConfig": "apps/elasticity/horizontal-elasticity-strategy-controller/jest.config.ts",
            "passWithNoTests": true
          }
        }
      },
      "tags": [
        "scope:elasticity",
        "orchestrator:kubernetes"
      ]
    },
    "elasticity-vertical-elasticity-strategy-controller": {
      "$schema": "../../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/elasticity/vertical-elasticity-strategy-controller",
      "sourceRoot": "apps/elasticity/vertical-elasticity-strategy-controller/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/webpack:webpack",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/apps/elasticity/vertical-elasticity-strategy-controller",
            "main": "apps/elasticity/vertical-elasticity-strategy-controller/src/main.ts",
            "tsConfig": "apps/elasticity/vertical-elasticity-strategy-controller/tsconfig.app.json",
            "externalDependencies": "none",
            "assets": [
              "apps/elasticity/vertical-elasticity-strategy-controller/src/assets"
            ],
            "target": "node",
            "compiler": "tsc"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/elasticity/vertical-elasticity-strategy-controller/src/environments/environment.ts",
                  "with": "apps/elasticity/vertical-elasticity-strategy-controller/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "elasticity-vertical-elasticity-strategy-controller:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/elasticity/vertical-elasticity-strategy-controller/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/apps/elasticity/vertical-elasticity-strategy-controller"
          ],
          "options": {
            "jestConfig": "apps/elasticity/vertical-elasticity-strategy-controller/jest.config.ts",
            "passWithNoTests": true
          }
        }
      },
      "tags": [
        "scope:elasticity",
        "orchestrator:kubernetes"
      ]
    },
    "kubernetes": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/kubernetes",
      "sourceRoot": "libs/kubernetes/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/kubernetes/**/*.ts",
              "libs/kubernetes/**/*.spec.ts",
              "libs/kubernetes/**/*.spec.tsx",
              "libs/kubernetes/**/*.spec.js",
              "libs/kubernetes/**/*.spec.jsx",
              "libs/kubernetes/**/*.d.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/kubernetes/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/libs/kubernetes"
          ]
        },
        "build": {
          "builder": "@nrwl/js:tsc",
          "options": {
            "outputPath": "dist/libs/kubernetes",
            "tsConfig": "libs/kubernetes/tsconfig.lib.json",
            "packageJson": "libs/kubernetes/package.json",
            "main": "libs/kubernetes/src/index.ts",
            "assets": [
              "libs/kubernetes/*.md"
            ]
          },
          "outputs": [
            "{options.outputPath}"
          ]
        }
      },
      "tags": [
        "orchestrator:kubernetes"
      ]
    },
    "metrics-predicted-cost-efficiency-controller": {
      "$schema": "../../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/metrics/predicted-cost-efficiency-controller",
      "sourceRoot": "apps/metrics/predicted-cost-efficiency-controller/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/webpack:webpack",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/apps/metrics/predicted-cost-efficiency-controller",
            "main": "apps/metrics/predicted-cost-efficiency-controller/src/main.ts",
            "tsConfig": "apps/metrics/predicted-cost-efficiency-controller/tsconfig.app.json",
            "assets": [
              "apps/metrics/predicted-cost-efficiency-controller/src/assets"
            ],
            "externalDependencies": "none",
            "target": "node",
            "compiler": "tsc"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/metrics/predicted-cost-efficiency-controller/src/environments/environment.ts",
                  "with": "apps/metrics/predicted-cost-efficiency-controller/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "metrics-predicted-cost-efficiency-controller:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": [
            "{options.outputFile}"
          ],
          "options": {
            "lintFilePatterns": [
              "apps/metrics/predicted-cost-efficiency-controller/**/*.ts"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/apps/metrics/predicted-cost-efficiency-controller"
          ],
          "options": {
            "jestConfig": "apps/metrics/predicted-cost-efficiency-controller/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "docker-build": {
          "builder": "nx:run-commands",
          "options": {
            "commands": [
              "docker build -f ./apps/metrics/predicted-cost-efficiency-controller/Dockerfile --build-arg POLARIS_APP_TYPE=metrics --build-arg POLARIS_APP_NAME=predicted-cost-efficiency-controller -t polarissloc/metrics-predicted-cost-efficiency-controller:latest ."
            ],
            "parallel": false
          }
        },
        "deploy": {
          "builder": "nx:run-commands",
          "options": {
            "commands": [
              "kubectl apply -f ./apps/metrics/predicted-cost-efficiency-controller/manifests/kubernetes"
            ],
            "parallel": false
          }
        }
      },
      "tags": []
    },
    "metrics-rest-api-cost-efficiency-controller": {
      "$schema": "../../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/metrics/rest-api-cost-efficiency-controller",
      "sourceRoot": "apps/metrics/rest-api-cost-efficiency-controller/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/webpack:webpack",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/apps/metrics/rest-api-cost-efficiency-controller",
            "main": "apps/metrics/rest-api-cost-efficiency-controller/src/main.ts",
            "tsConfig": "apps/metrics/rest-api-cost-efficiency-controller/tsconfig.app.json",
            "externalDependencies": "none",
            "assets": [
              "apps/metrics/rest-api-cost-efficiency-controller/src/assets"
            ],
            "target": "node",
            "compiler": "tsc"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/metrics/rest-api-cost-efficiency-controller/src/environments/environment.ts",
                  "with": "apps/metrics/rest-api-cost-efficiency-controller/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "metrics-rest-api-cost-efficiency-controller:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/metrics/rest-api-cost-efficiency-controller/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/apps/metrics/rest-api-cost-efficiency-controller"
          ],
          "options": {
            "jestConfig": "apps/metrics/rest-api-cost-efficiency-controller/jest.config.ts",
            "passWithNoTests": true
          }
        }
      },
      "tags": [
        "scope:metrics-controller"
      ]
    },
    "polaris-cli": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/polaris-cli",
      "sourceRoot": "apps/polaris-cli/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/js:tsc",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/apps/polaris-cli",
            "main": "apps/polaris-cli/src/main.ts",
            "tsConfig": "apps/polaris-cli/tsconfig.app.json",
            "packageJson": "apps/polaris-cli/package.json",
            "assets": [
              "apps/polaris-cli/*.md",
              "apps/polaris-cli/src/assets"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/polaris-cli/src/environments/environment.ts",
                  "with": "apps/polaris-cli/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "polaris-cli:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/polaris-cli/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/apps/polaris-cli"
          ],
          "options": {
            "jestConfig": "apps/polaris-cli/jest.config.ts",
            "passWithNoTests": true
          }
        }
      },
      "tags": [
        "cli"
      ]
    },
    "polaris-nx": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/polaris-nx",
      "sourceRoot": "libs/polaris-nx/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/polaris-nx/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/polaris-nx"
          ],
          "options": {
            "jestConfig": "libs/polaris-nx/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@nrwl/js:tsc",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/libs/polaris-nx",
            "tsConfig": "libs/polaris-nx/tsconfig.lib.json",
            "packageJson": "libs/polaris-nx/package.json",
            "main": "libs/polaris-nx/src/index.ts",
            "assets": [
              "libs/polaris-nx/*.md",
              {
                "input": "./libs/polaris-nx/src",
                "glob": "**/*.!(ts)",
                "output": "./src"
              },
              {
                "input": "./libs/polaris-nx/src",
                "glob": "**/.dockerignore__template__",
                "output": "./src"
              },
              {
                "input": "./libs/polaris-nx/src",
                "glob": "**/Dockerfile__template__",
                "output": "./src"
              },
              {
                "input": "./libs/polaris-nx",
                "glob": "generators.json",
                "output": "."
              },
              {
                "input": "./libs/polaris-nx",
                "glob": "executors.json",
                "output": "."
              }
            ]
          }
        }
      },
      "tags": [
        "scope:cli"
      ]
    },
    "polaris-nx-e2e": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "projectType": "application",
      "root": "apps/polaris-nx-e2e",
      "sourceRoot": "apps/polaris-nx-e2e/src",
      "architect": {
        "e2e": {
          "builder": "@nrwl/nx-plugin:e2e",
          "options": {
            "target": "polaris-nx:build",
            "jestConfig": "apps/polaris-nx-e2e/jest.config.ts"
          }
        }
      },
      "tags": [
        "scope:cli"
      ],
      "implicitDependencies": [
        "polaris-nx"
      ]
    },
    "prometheus": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/prometheus",
      "sourceRoot": "libs/prometheus/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/prometheus/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/prometheus/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/libs/prometheus"
          ]
        },
        "build": {
          "builder": "@nrwl/js:tsc",
          "options": {
            "outputPath": "dist/libs/prometheus",
            "tsConfig": "libs/prometheus/tsconfig.lib.json",
            "packageJson": "libs/prometheus/package.json",
            "main": "libs/prometheus/src/index.ts",
            "assets": [
              "libs/prometheus/*.md"
            ]
          },
          "outputs": [
            "{options.outputPath}"
          ]
        }
      },
      "tags": [
        "scope:core",
        "query:prometheus"
      ]
    },
    "schema-gen": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/schema-gen",
      "sourceRoot": "libs/schema-gen/src",
      "projectType": "library",
      "architect": {
        "build": {
          "builder": "@nrwl/js:tsc",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/libs/schema-gen",
            "tsConfig": "libs/schema-gen/tsconfig.lib.json",
            "packageJson": "libs/schema-gen/package.json",
            "main": "libs/schema-gen/src/index.ts",
            "assets": [
              "libs/schema-gen/*.md"
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": [
            "{options.outputFile}"
          ],
          "options": {
            "lintFilePatterns": [
              "libs/schema-gen/**/*.ts"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/schema-gen"
          ],
          "options": {
            "jestConfig": "libs/schema-gen/jest.config.ts",
            "passWithNoTests": true
          }
        }
      },
      "tags": [
        "scope:cli"
      ]
    },
    "slo-cost-efficiency-slo-controller": {
      "$schema": "../../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/slo/cost-efficiency-slo-controller",
      "sourceRoot": "apps/slo/cost-efficiency-slo-controller/src",
      "projectType": "application",
      "prefix": "slo-cost-efficiency-slo-controller",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/webpack:webpack",
          "options": {
            "outputPath": "dist/apps/slo/cost-efficiency-slo-controller",
            "main": "apps/slo/cost-efficiency-slo-controller/src/main.ts",
            "tsConfig": "apps/slo/cost-efficiency-slo-controller/tsconfig.app.json",
            "externalDependencies": "none",
            "assets": [
              "apps/slo/cost-efficiency-slo-controller/src/assets"
            ],
            "target": "node",
            "compiler": "tsc"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/slo/cost-efficiency-slo-controller/src/environments/environment.ts",
                  "with": "apps/slo/cost-efficiency-slo-controller/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "outputs": [
            "{options.outputPath}"
          ]
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "slo-cost-efficiency-slo-controller:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/slo/cost-efficiency-slo-controller/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/slo/cost-efficiency-slo-controller/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/apps/slo/cost-efficiency-slo-controller"
          ]
        }
      },
      "tags": [
        "scope:cli",
        "orchestrator:kubernetes",
        "query:prometheus"
      ]
    },
    "slo-cpu-usage-slo-controller": {
      "$schema": "../../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/slo/cpu-usage-slo-controller",
      "sourceRoot": "apps/slo/cpu-usage-slo-controller/src",
      "projectType": "application",
      "prefix": "cpu-usage-slo-controller",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/webpack:webpack",
          "options": {
            "outputPath": "dist/apps/slo/cpu-usage-slo-controller",
            "main": "apps/slo/cpu-usage-slo-controller/src/main.ts",
            "tsConfig": "apps/slo/cpu-usage-slo-controller/tsconfig.app.json",
            "externalDependencies": "none",
            "assets": [
              "apps/slo/cpu-usage-slo-controller/src/assets"
            ],
            "target": "node",
            "compiler": "tsc"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/slo/cpu-usage-slo-controller/src/environments/environment.ts",
                  "with": "apps/slo/cpu-usage-slo-controller/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "outputs": [
            "{options.outputPath}"
          ]
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "slo-cpu-usage-slo-controller:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/slo/cpu-usage-slo-controller/**/*.ts",
              "apps/slo/cpu-usage-slo-controller/**/*.spec.ts",
              "apps/slo/cpu-usage-slo-controller/**/*.d.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/slo/cpu-usage-slo-controller/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/apps/slo/cpu-usage-slo-controller"
          ]
        }
      },
      "tags": [
        "scope:slo",
        "orchestrator:kubernetes"
      ]
    },
    "ui-polaris-ui": {
      "$schema": "../../../node_modules/nx/schemas/project-schema.json",
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/ui/polaris-ui",
      "sourceRoot": "apps/ui/polaris-ui/src",
      "prefix": "polaris",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/ui/polaris-ui",
            "index": "apps/ui/polaris-ui/src/index.html",
            "main": "apps/ui/polaris-ui/src/main.ts",
            "polyfills": "apps/ui/polaris-ui/src/polyfills.ts",
            "tsConfig": "apps/ui/polaris-ui/tsconfig.app.json",
            "assets": [
              "apps/ui/polaris-ui/src/favicon.ico",
              "apps/ui/polaris-ui/src/assets"
            ],
            "styles": [
              "apps/ui/polaris-ui/src/styles/styles.scss"
            ],
            "stylePreprocessorOptions": {
              "includePaths": [
                "apps/ui/polaris-ui/src/styles"
              ]
            },
            "scripts": [],
            "vendorChunk": true,
            "extractLicenses": false,
            "buildOptimizer": false,
            "sourceMap": true,
            "optimization": false,
            "namedChunks": true
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/ui/polaris-ui/src/environments/environment.ts",
                  "with": "apps/ui/polaris-ui/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          },
          "outputs": [
            "{options.outputPath}"
          ],
          "defaultConfiguration": ""
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "ui-polaris-ui:build",
            "proxyConfig": "./proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "ui-polaris-ui:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "ui-polaris-ui:build"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/ui/polaris-ui/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": [
            "coverage/apps/ui/polaris-ui"
          ]
        }
      },
      "tags": [
        "scope:ui"
      ]
    },
    "ui-polaris-ui-e2e": {
      "$schema": "../../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/ui/polaris-ui-e2e",
      "sourceRoot": "apps/ui/polaris-ui-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/ui/polaris-ui-e2e/cypress.json",
            "tsConfig": "apps/ui/polaris-ui-e2e/tsconfig.e2e.json",
            "devServerTarget": "ui-polaris-ui:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "ui-polaris-ui:serve:production"
            }
          }
        }
      },
      "tags": [
        "scope:ui"
      ],
      "implicitDependencies": [
        "ui-polaris-ui"
      ]
    }
  }
}
